(in-microtheory KRR-BikeTest)



;;; Predicates / Functions

;;; This function should allow us to enter multiple symptoms
(isa SymptomFn BinaryFunction)
(arity SymptomFn 2)
(arg1Isa SymptomFn PartCondition)
(arg2Isa SymptomFn BikePart)
(resultIsa SymptomFn ProblemSymptom)
(comment SymptomFn “A symptom that includes the given part and condition.”)

;;; Predicate type that relates errors to resolutions
(isa solvesProblem DirectBinaryPredicate)
(arity solvesProblem 2)
(arg1Isa solvesProblem BikeDefect)
(arg2Isa solvesProblem List)
(comment solvesProblem "A relation indicating that the problem can be solved by the given list of problem resolutions.")

;;; Predicate type that relates symptoms to errors
(isa causesProblem DirectBinaryPredicate)
(arity causesProblem 2)
(arg1Isa causesProblem Set)
(arg2Isa causesProblem BikeDefect)
(comment causesProblem "A relation indicating that the problem is caused by the listed symptoms.")

;;; Predicate indicates what the shortcut for this fact is
;;; (isa code DirectBinaryPredicate)
;;; (arity code 2)
;;; (arg1Isa code Thing)
;;; (arg2Isa code CharacterString)
;;; (comment code "Indicates what the shortcut or code for this fact is.")